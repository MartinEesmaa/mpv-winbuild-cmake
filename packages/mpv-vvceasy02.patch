From ee1feebf0b68fbb03284f9f59c67b76a2604e0ed Mon Sep 17 00:00:00 2001
From: MartinEesmaa <martin.eesmaa@protonmail.com>
Date: Wed, 4 Sep 2024 10:09:12 +1000
Subject: [PATCH] osdep/io.c: Modify codes to support Win 7

---
 osdep/io.c | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/osdep/io.c b/osdep/io.c
index a8210dc..1dfc6bf 100644
--- a/osdep/io.c
+++ b/osdep/io.c
@@ -181,16 +181,23 @@ static time_t filetime_to_unix_time(int64_t wintime)
 
 static bool get_file_ids_win8(HANDLE h, dev_t *dev, ino_t *ino)
 {
-    FILE_ID_INFO ii;
-    if (!GetFileInformationByHandleEx(h, FileIdInfo, &ii, sizeof(ii)))
+    if (h == NULL || dev == NULL || ino == NULL) {
         return false;
-    *dev = ii.VolumeSerialNumber;
+    }
+    BY_HANDLE_FILE_INFORMATION ii;
+    if (!GetFileInformationByHandle(h, &ii)) {
+        return false;
+    }
+    *dev = ii.dwVolumeSerialNumber;
     // The definition of FILE_ID_128 differs between mingw-w64 and the Windows
     // SDK, but we can ignore that by just memcpying it. This will also
     // truncate the file ID on 32-bit Windows, which doesn't support __int128.
     // 128-bit file IDs are only used for ReFS, so that should be okay.
-    static_assert(sizeof(*ino) <= sizeof(ii.FileId), "");
-    memcpy(ino, &ii.FileId, sizeof(*ino));
+    ULONGLONG fileIndex = ((ULONGLONG)ii.nFileIndexHigh << 32) | ii.nFileIndexLow;
+    if (sizeof(*ino) < sizeof(ULONGLONG)) {
+        return false;
+    }
+    memcpy(ino, &fileIndex, sizeof(ULONGLONG));
     return true;
 }
 
-- 


